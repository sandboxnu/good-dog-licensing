// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_PRISMA_URL")
}

enum Role {
  MUSICIAN
  MEDIA_MAKER
  ADMIN
}

model User {
  id             String        @id @default(uuid())
  email          String        @unique
  firstName      String
  lastName       String
  hashedPassword String        @map("password")
  role           Role
  groups         UserToGroup[]
  sessions       Session[]
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
}

model Session {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  createdAt DateTime @default(now())
  expiresAt DateTime
}

model Group {
  groupId    String        @id @default(uuid())
  name       String?
  userGroups UserToGroup[]
  createdAt  DateTime      @default(now())
  updatedAt  DateTime      @updatedAt
}

model UserToGroup {
  groupId String
  email   String
  group   Group  @relation(fields: [groupId], references: [groupId])
  user    User?  @relation(fields: [email], references: [email])

  @@unique([groupId, email])
}
